{"openapi": "3.0.2", "info": {"title": "TuxPay", "description": "TuxPay Payment API Server", "version": "0.0.1"}, "paths": {"/api/authenticate": {"post": {"tags": ["authentication"], "summary": "Authenticate", "description": "Authenticates with the admin API with an email + password. Returns a JWT Bearer token", "operationId": "authenticate_api_authenticate_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthenticationModel"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthenticationResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/dashboard": {"get": {"tags": ["admin"], "summary": "Admin Dashboard", "description": "Returns a summary of the last 30 days worth of invoices and payments\n:return:", "operationId": "admin_dashboard_api_admin_dashboard_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DashboardResponse"}}}}}}}, "/api/admin/invoice/{invoice_id}": {"get": {"tags": ["admin", "invoice"], "summary": "Admin Invoice Get", "description": "Returns an invoice and all associated payment details", "operationId": "admin_invoice_get_api_admin_invoice__invoice_id__get", "parameters": [{"required": true, "schema": {"title": "Invoice Id", "type": "integer"}, "name": "invoice_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AdminInvoiceLookupResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/invoice": {"get": {"tags": ["admin", "invoice"], "summary": "Admin Invoices", "description": "Fetches a list of invoices", "operationId": "admin_invoices_api_admin_invoice_get", "parameters": [{"required": false, "schema": {"title": "Limit", "type": "integer", "default": 50}, "name": "limit", "in": "query"}, {"required": false, "schema": {"title": "Offset", "type": "integer", "default": 0}, "name": "offset", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Admin Invoices Api Admin Invoice Get", "type": "array", "items": {"$ref": "#/components/schemas/InvoiceReadModel"}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["admin", "invoice"], "summary": "Admin Invoice Creation", "description": "Creates an Invoice", "operationId": "admin_invoice_creation_api_admin_invoice_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvoiceCreationModel"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AdminInvoiceCreationResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/payment/{payment_id}": {"get": {"tags": ["admin", "payment"], "summary": "Admin Payment Get", "operationId": "admin_payment_get_api_admin_payment__payment_id__get", "parameters": [{"required": true, "schema": {"title": "Payment Id", "type": "integer"}, "name": "payment_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/payments": {"get": {"tags": ["admin", "payment"], "summary": "Admin Get Payments", "operationId": "admin_get_payments_api_admin_payments_get", "parameters": [{"required": false, "schema": {"title": "Limit", "type": "integer", "default": 50}, "name": "limit", "in": "query"}, {"required": false, "schema": {"title": "Offset", "type": "integer", "default": 0}, "name": "offset", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Admin Get Payments Api Admin Payments Get", "type": "array", "items": {"$ref": "#/components/schemas/PaymentAdminReadModel"}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/payment": {"post": {"tags": ["admin", "payment"], "summary": "Admin Payment Creation", "description": "Creates a payment + invoice all in one call", "operationId": "admin_payment_creation_api_admin_payment_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaymentCreationModel"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/payment": {"get": {"tags": ["payment"], "summary": "Payment Get", "operationId": "payment_get_api_payment_get", "parameters": [{"required": true, "schema": {"title": "Uuid", "type": "string"}, "name": "uuid", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaymentCustomerReadModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/invoice": {"get": {"tags": ["invoice"], "summary": "Invoice Get", "operationId": "invoice_get_api_invoice_get", "parameters": [{"required": false, "schema": {"title": "Token associated with the invoice", "type": "string"}, "example": "", "name": "token", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvoiceGetResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["invoice", "payment"], "summary": "Invoice Put", "description": "Creates a new payment against an open payment", "operationId": "invoice_put_api_invoice_put", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TuxPaymentModel"}}}}}}}, "/api/invoice/download": {"get": {"tags": ["invoice", "payment"], "summary": "Invoice Download", "description": "Downloads a PDF copy of the given invoice.\nPassing `invoice_id` requires admin authentication, passing `token` does not.", "operationId": "invoice_download_api_invoice_download_get", "parameters": [{"required": false, "schema": {"title": "Invoice Id", "type": "integer"}, "name": "invoice_id", "in": "query"}, {"required": false, "schema": {"title": "Token", "type": "string"}, "name": "token", "in": "query"}], "responses": {"200": {"description": "PDF copy of the passed invoice.", "content": {"application/json": {"schema": {}}, "application/pdf": {}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/coins": {"get": {"tags": ["invoice", "payment"], "summary": "Get Coins", "description": "Returns an array of data pertaining to all the payment types supported by the server", "operationId": "get_coins_api_coins_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CoinsResponse"}}}}}}}}, "components": {"schemas": {"AdminInvoiceCreationResponse": {"title": "AdminInvoiceCreationResponse", "required": ["invoice"], "type": "object", "properties": {"invoice": {"$ref": "#/components/schemas/InvoiceReadModel"}}}, "AdminInvoiceLookupResponse": {"title": "AdminInvoiceLookupResponse", "required": ["invoice", "payments"], "type": "object", "properties": {"invoice": {"$ref": "#/components/schemas/InvoiceReadModel"}, "payments": {"title": "Payments", "type": "array", "items": {"$ref": "#/components/schemas/PaymentAdminReadModel"}}}}, "AuthenticationModel": {"title": "AuthenticationModel", "type": "object", "properties": {"email": {"title": "User's email address", "type": "string"}, "password": {"title": "User's password", "type": "string"}, "remember": {"title": "How long the login is valid for. Generated token expires in 5 hours if false, or 14 days if true", "type": "boolean", "default": false}}}, "AuthenticationResponse": {"title": "AuthenticationResponse", "type": "object", "properties": {"token": {"title": "JWT Bearer Token", "type": "string", "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZW1haWwiOiJ0ZXN0dXNlckBtZS5jb20iLCJuYW1lIjoiVGVzdCBVc2VyIiwiZXhwIjoxNzAwMDAwMDAwfQ.TcEE3JjltOULdfKKmIQvu19kRnaJrSRVCWb-TXTvJqA"}}}, "CoinResponse": {"title": "CoinResponse", "required": ["symbol", "name", "decimals", "fee_rate", "fee_estimate", "icon"], "type": "object", "properties": {"symbol": {"title": "Symbol used to reference the coin", "type": "string", "example": "BTC"}, "name": {"title": "Name of the coin", "type": "string", "example": "Bitcoin"}, "decimals": {"title": "Decimal places representing the smallest denomination (1 Satoshi)", "type": "integer", "example": 8}, "fee_rate": {"title": "Current feerate (in sats/byte)", "type": "integer", "example": 1}, "fee_estimate": {"title": "Estimated fee (in USD) of a transaction (1 input, 2 outputs)", "type": "number", "example": 0.13}, "icon": {"title": "Base64 encoded SVG icon corresponding to the coin", "type": "string", "example": "PHN2Zz48L3N2Zz4="}}}, "CoinsResponse": {"title": "CoinsResponse", "required": ["currencies", "coins"], "type": "object", "properties": {"currencies": {"title": "Fiat exchange rates (USD -> X)", "type": "object", "additionalProperties": {"type": "number"}, "example": {"USD": 1.0, "CAD": 1.31}}, "coins": {"title": "Coins", "type": "array", "items": {"$ref": "#/components/schemas/CoinResponse"}}}}, "DashboardInvoice": {"title": "DashboardInvoice", "required": ["id", "creation_date", "expiry_date", "payment_date", "amount_cents", "currency", "status"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "creation_date": {"title": "Creation Date", "type": "number"}, "expiry_date": {"title": "Expiry Date", "type": "number"}, "payment_date": {"title": "Payment Date", "type": "number"}, "amount_cents": {"title": "Amount Cents", "type": "integer"}, "currency": {"title": "Currency", "type": "string"}, "status": {"title": "Status", "type": "string"}}}, "DashboardResponse": {"title": "DashboardResponse", "required": ["created", "paid", "expired", "open"], "type": "object", "properties": {"created": {"$ref": "#/components/schemas/SummaryResponse"}, "paid": {"$ref": "#/components/schemas/SummaryResponse"}, "expired": {"$ref": "#/components/schemas/SummaryResponseWithInvoices"}, "open": {"title": "Open", "type": "array", "items": {"$ref": "#/components/schemas/DashboardInvoice"}}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "InvoiceCreationModel": {"title": "InvoiceCreationModel", "type": "object", "properties": {"currency": {"title": "Fiat currency type", "type": "string", "default": "USD"}, "amount_cents": {"title": "Invoice amount, in cents", "type": "integer", "example": 999}, "expiry_date": {"title": "Expiration timestamp", "type": "number", "example": 1699999999.5}, "name": {"title": "Name assigned to the invoice, if blank, will be assigned the name `#INV-XXXXX` where X is the invoice ID, left padded with zeros to a minimum of 5 characters", "maxLength": 200, "type": "string"}, "customer_name": {"title": "Customer Name", "type": "string", "example": "Test User"}, "customer_email": {"title": "Customer Email", "type": "string", "example": "Customer Email"}, "notes": {"title": "Notes to be printed on the invoice. If only one of `notes`/`notes_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "Notes\\nin\\nraw\\ntext"}, "notes_html": {"title": "Notes to be printed on the invoice. If only one of `notes`/`notes_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "<p>Notes</p><p>in</p><p>raw</p><p>text</p>"}, "contents": {"title": "Contents (e.g. line items) in plain text to be printed on the invoice. If only one of `contents`/`contents_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "- #2 Pencil\\n- Bic Pen\\n- Yellow Highlighter"}, "contents_html": {"title": "Contents (e.g. line items) in plain text to be printed on the invoice. If only one of `contents`/`contents_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "<ul><li>#2 Pencil</li><li>Bic Pen</li><li>Yellow Highlighter</li></ul>"}}}, "InvoiceGetResponse": {"title": "InvoiceGetResponse", "required": ["coins", "payments", "invoice"], "type": "object", "properties": {"coins": {"$ref": "#/components/schemas/CoinResponse"}, "payments": {"title": "Payments", "type": "array", "items": {"$ref": "#/components/schemas/PaymentCustomerReadModel"}}, "invoice": {"$ref": "#/components/schemas/InvoiceReadModel"}}}, "InvoiceReadModel": {"title": "InvoiceReadModel", "type": "object", "properties": {"currency": {"title": "Fiat currency type", "type": "string", "default": "USD"}, "amount_cents": {"title": "Invoice amount, in cents", "type": "integer", "example": 999}, "expiry_date": {"title": "Expiration timestamp", "type": "number", "example": 1699999999.5}, "name": {"title": "Name assigned to the invoice, if blank, will be assigned the name `#INV-XXXXX` where X is the invoice ID, left padded with zeros to a minimum of 5 characters", "maxLength": 200, "type": "string"}, "customer_name": {"title": "Customer Name", "type": "string", "example": "Test User"}, "customer_email": {"title": "Customer Email", "type": "string", "example": "Customer Email"}, "notes": {"title": "Notes to be printed on the invoice. If only one of `notes`/`notes_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "Notes\\nin\\nraw\\ntext"}, "notes_html": {"title": "Notes to be printed on the invoice. If only one of `notes`/`notes_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "<p>Notes</p><p>in</p><p>raw</p><p>text</p>"}, "contents": {"title": "Contents (e.g. line items) in plain text to be printed on the invoice. If only one of `contents`/`contents_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "- #2 Pencil\\n- Bic Pen\\n- Yellow Highlighter"}, "contents_html": {"title": "Contents (e.g. line items) in plain text to be printed on the invoice. If only one of `contents`/`contents_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "<ul><li>#2 Pencil</li><li>Bic Pen</li><li>Yellow Highlighter</li></ul>"}, "id": {"title": "The invoice's ID", "type": "integer", "example": 53}, "uuid": {"title": "Unique identifier of the invoice", "type": "integer", "example": "c0e7635e-c547-4068-ad04-2b96263ce201"}, "creation_date": {"title": "Creation timestamp", "type": "number", "example": 1649999999.5}, "payment_date": {"title": "Payment timestamp", "type": "number", "example": 1679999999.5}, "status": {"title": "Invoice payment status, one of `pending`, `expired`, `paid`, or `confirmed`", "type": "string", "example": "confirmed"}, "token": {"title": "Token used to facilitate invoice payment. NOTE: the algorithm is truncated from the front of the JWT to minimize character count", "type": "string", "example": "eyJpZCI6Nn0.kqGv1YFHpoENA0iIwm_1BopND6KsIzuNYaKTDX_xV1Q"}}}, "PaymentAdminReadModel": {"title": "PaymentAdminReadModel", "required": ["invoice"], "type": "object", "properties": {"invoice_id": {"title": "The parent invoice's ID", "type": "integer", "example": 53}, "symbol": {"title": "Payment coin identifier", "type": "string", "example": "tBTC"}, "expiry_date": {"title": "Expiration timestamp", "type": "number", "example": 1624497930.8}, "amount_sats": {"title": "Amount to be paid to this address", "type": "integer", "example": 1299}, "id": {"title": "The payment's ID", "type": "integer", "example": 16}, "uuid": {"title": "Payment UUID", "type": "string", "example": "f3ff3ba1-3c7d-4189-9a5e-e2a20ab86a3d"}, "creation_date": {"title": "Creation timestamp", "type": "number", "example": 1624497030.8}, "creation_height": {"title": "Blockheight at the time of address generation", "type": "integer", "example": 2006107}, "address": {"title": "Payment Address", "type": "string", "example": "tb1q73fcynsq0l0cl842pwp0x4f8epsqslaj2acfw6"}, "status": {"title": "One of `pending`, `expired`, `paid`, or `confirmed`", "type": "string", "example": "paid"}, "payment_date": {"title": "Payment timestamp", "type": "number", "example": 1679999999.5}, "last_update": {"title": "Update timestamp", "type": "number", "example": 1679999999.5}, "amount_coin": {"title": "Floating point representation of `amount_sats`", "type": "number", "example": 1.299e-05}, "paid_amount_sats": {"title": "How much has been paid out to this address since payment creation", "type": "integer", "example": 1299}, "paid_amount_coin": {"title": "Floating point representation of `paid_amount_sats`", "type": "number", "example": 1.299e-05}, "qr_code": {"title": "BIP-21 compatible QR Code as a Base64 encoded PNG - only returned for active payment addresses", "type": "number", "example": "data:image/png;base64, Af9sad21jdsa[...] "}, "invoice": {"$ref": "#/components/schemas/InvoiceReadModel"}, "scripthash": {"title": "Scripthash of the payment", "type": "string", "example": "b2c687e687b46f6491e9bea9e49dd54f09cb547f33935b9d74cebc320a81e053"}, "derivation_path": {"title": "Derivation path of the address", "type": "string", "example": "84h/1h/0h/0/8"}, "derivation_account": {"title": "Derivation account of the address", "type": "integer", "example": 0}, "derivation_index": {"title": "Derivation index of the address", "type": "integer", "example": 8}}}, "PaymentCreationModel": {"title": "PaymentCreationModel", "type": "object", "properties": {"currency": {"title": "Fiat currency type", "type": "string", "default": "USD"}, "amount_cents": {"title": "Invoice amount, in cents", "type": "integer", "example": 999}, "expiry_date": {"title": "Expiration timestamp", "type": "number", "example": 1699999999.5}, "name": {"title": "Name assigned to the invoice, if blank, will be assigned the name `#INV-XXXXX` where X is the invoice ID, left padded with zeros to a minimum of 5 characters", "maxLength": 200, "type": "string"}, "customer_name": {"title": "Customer Name", "type": "string", "example": "Test User"}, "customer_email": {"title": "Customer Email", "type": "string", "example": "Customer Email"}, "notes": {"title": "Notes to be printed on the invoice. If only one of `notes`/`notes_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "Notes\\nin\\nraw\\ntext"}, "notes_html": {"title": "Notes to be printed on the invoice. If only one of `notes`/`notes_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "<p>Notes</p><p>in</p><p>raw</p><p>text</p>"}, "contents": {"title": "Contents (e.g. line items) in plain text to be printed on the invoice. If only one of `contents`/`contents_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "- #2 Pencil\\n- Bic Pen\\n- Yellow Highlighter"}, "contents_html": {"title": "Contents (e.g. line items) in plain text to be printed on the invoice. If only one of `contents`/`contents_html` is provided, the value of one will be inferred from the other", "type": "string", "example": "<ul><li>#2 Pencil</li><li>Bic Pen</li><li>Yellow Highlighter</li></ul>"}, "symbol": {"title": "Payment Coin (e.g. BTC, LTC, etc)", "type": "string"}, "amount_sats": {"title": "Payment amount in the minimum denomination of the coin (Satoshis)", "type": "integer"}}}, "PaymentCustomerReadModel": {"title": "PaymentCustomerReadModel", "required": ["invoice"], "type": "object", "properties": {"invoice_id": {"title": "The parent invoice's ID", "type": "integer", "example": 53}, "symbol": {"title": "Payment coin identifier", "type": "string", "example": "tBTC"}, "expiry_date": {"title": "Expiration timestamp", "type": "number", "example": 1624497930.8}, "amount_sats": {"title": "Amount to be paid to this address", "type": "integer", "example": 1299}, "id": {"title": "The payment's ID", "type": "integer", "example": 16}, "uuid": {"title": "Payment UUID", "type": "string", "example": "f3ff3ba1-3c7d-4189-9a5e-e2a20ab86a3d"}, "creation_date": {"title": "Creation timestamp", "type": "number", "example": 1624497030.8}, "creation_height": {"title": "Blockheight at the time of address generation", "type": "integer", "example": 2006107}, "address": {"title": "Payment Address", "type": "string", "example": "tb1q73fcynsq0l0cl842pwp0x4f8epsqslaj2acfw6"}, "status": {"title": "One of `pending`, `expired`, `paid`, or `confirmed`", "type": "string", "example": "paid"}, "payment_date": {"title": "Payment timestamp", "type": "number", "example": 1679999999.5}, "last_update": {"title": "Update timestamp", "type": "number", "example": 1679999999.5}, "amount_coin": {"title": "Floating point representation of `amount_sats`", "type": "number", "example": 1.299e-05}, "paid_amount_sats": {"title": "How much has been paid out to this address since payment creation", "type": "integer", "example": 1299}, "paid_amount_coin": {"title": "Floating point representation of `paid_amount_sats`", "type": "number", "example": 1.299e-05}, "qr_code": {"title": "BIP-21 compatible QR Code as a Base64 encoded PNG - only returned for active payment addresses", "type": "number", "example": "data:image/png;base64, Af9sad21jdsa[...] "}, "invoice": {"$ref": "#/components/schemas/InvoiceReadModel"}}}, "SummaryResponse": {"title": "SummaryResponse", "required": ["count", "dollars"], "type": "object", "properties": {"count": {"title": "Count", "type": "integer"}, "dollars": {"title": "Dollars", "type": "number"}}}, "SummaryResponseWithInvoices": {"title": "SummaryResponseWithInvoices", "required": ["count", "dollars", "invoices"], "type": "object", "properties": {"count": {"title": "Count", "type": "integer"}, "dollars": {"title": "Dollars", "type": "number"}, "invoices": {"title": "Invoices", "type": "array", "items": {"$ref": "#/components/schemas/DashboardInvoice"}}}}, "TuxPaymentModel": {"title": "TuxPaymentModel", "required": ["invoice"], "type": "object", "properties": {"invoice_id": {"title": "The parent invoice's ID", "type": "integer", "example": 53}, "symbol": {"title": "Payment coin identifier", "type": "string", "example": "tBTC"}, "expiry_date": {"title": "Expiration timestamp", "type": "number", "example": 1624497930.8}, "amount_sats": {"title": "Amount to be paid to this address", "type": "integer", "example": 1299}, "id": {"title": "The payment's ID", "type": "integer", "example": 16}, "uuid": {"title": "Payment UUID", "type": "string", "example": "f3ff3ba1-3c7d-4189-9a5e-e2a20ab86a3d"}, "creation_date": {"title": "Creation timestamp", "type": "number", "example": 1624497030.8}, "creation_height": {"title": "Blockheight at the time of address generation", "type": "integer", "example": 2006107}, "address": {"title": "Payment Address", "type": "string", "example": "tb1q73fcynsq0l0cl842pwp0x4f8epsqslaj2acfw6"}, "status": {"title": "One of `pending`, `expired`, `paid`, or `confirmed`", "type": "string", "example": "paid"}, "payment_date": {"title": "Payment timestamp", "type": "number", "example": 1679999999.5}, "last_update": {"title": "Update timestamp", "type": "number", "example": 1679999999.5}, "amount_coin": {"title": "Floating point representation of `amount_sats`", "type": "number", "example": 1.299e-05}, "paid_amount_sats": {"title": "How much has been paid out to this address since payment creation", "type": "integer", "example": 1299}, "paid_amount_coin": {"title": "Floating point representation of `paid_amount_sats`", "type": "number", "example": 1.299e-05}, "qr_code": {"title": "BIP-21 compatible QR Code as a Base64 encoded PNG - only returned for active payment addresses", "type": "number", "example": "data:image/png;base64, Af9sad21jdsa[...] "}, "invoice": {"$ref": "#/components/schemas/InvoiceReadModel"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"type": "string"}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}, "tags": [{"name": "authentication", "description": "Authentication flow."}, {"name": "admin", "description": "Admin endpoints - Required for creating new invoices and payments, and all admin panel functionality."}, {"name": "invoice", "description": "Endpoints pertaining to invoice creation, reading, and payment"}, {"name": "payment", "description": "Endpoints pertaining to payment creation and reading"}]}